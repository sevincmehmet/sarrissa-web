{
  "version": 3,
  "sources": ["../../@mui/x-tree-view/esm/SimpleTreeView/SimpleTreeView.js", "../../@mui/x-internals/esm/warning/warning.js", "../../@mui/x-tree-view/esm/SimpleTreeView/simpleTreeViewClasses.js", "../../@mui/x-tree-view/esm/internals/useTreeView/useTreeView.js", "../../@mui/x-tree-view/esm/internals/corePlugins/useTreeViewInstanceEvents/useTreeViewInstanceEvents.js", "../../@mui/x-internals/esm/EventManager/EventManager.js", "../../@mui/x-tree-view/esm/internals/corePlugins/useTreeViewOptionalPlugins/useTreeViewOptionalPlugins.js", "../../@mui/x-tree-view/esm/internals/corePlugins/useTreeViewId/useTreeViewId.js", "../../@mui/x-tree-view/esm/internals/corePlugins/corePlugins.js", "../../@mui/x-tree-view/esm/internals/useTreeView/useExtractPluginParamsFromProps.js", "../../@mui/x-tree-view/esm/internals/useTreeView/useTreeViewBuildContext.js", "../../@mui/x-tree-view/esm/internals/utils/TreeViewStore.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewItems/useTreeViewItems.js", "../../@mui/x-tree-view/esm/internals/utils/publishTreeViewEvent.js", "../../@mui/x-internals/esm/useAssertModelConsistency/useAssertModelConsistency.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewExpansion/useTreeViewExpansion.utils.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewExpansion/useTreeViewExpansion.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewSelection/useTreeViewSelection.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewSelection/useTreeViewSelection.utils.js", "../../@mui/x-internals/esm/fastObjectShallowCompare/fastObjectShallowCompare.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewSelection/useTreeViewSelection.itemPlugin.js", "../../@mui/x-tree-view/esm/internals/hooks/useInstanceEventHandler.js", "../../@mui/x-tree-view/esm/internals/utils/cleanupTracking/TimerBasedCleanupTracking.js", "../../@mui/x-tree-view/esm/internals/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewFocus/useTreeViewFocus.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewKeyboardNavigation/useTreeViewKeyboardNavigation.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewJSXItems/useTreeViewJSXItems.js", "../../@mui/x-tree-view/esm/internals/TreeViewProvider/TreeViewChildrenItemProvider.js", "../../@mui/x-tree-view/esm/internals/utils/utils.js", "../../@mui/x-tree-view/esm/SimpleTreeView/SimpleTreeView.plugins.js"],
  "sourcesContent": ["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { styled, createUseThemeProps } from \"../internals/zero-styled/index.js\";\nimport { getSimpleTreeViewUtilityClass } from \"./simpleTreeViewClasses.js\";\nimport { useTreeView } from \"../internals/useTreeView/index.js\";\nimport { TreeViewProvider } from \"../internals/TreeViewProvider/index.js\";\nimport { SIMPLE_TREE_VIEW_PLUGINS } from \"./SimpleTreeView.plugins.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useThemeProps = createUseThemeProps('MuiSimpleTreeView');\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      root: ['root'],\n      item: ['item'],\n      itemContent: ['itemContent'],\n      itemGroupTransition: ['itemGroupTransition'],\n      itemIconContainer: ['itemIconContainer'],\n      itemLabel: ['itemLabel'],\n      // itemLabelInput: ['itemLabelInput'], => feature not available on this component\n      itemCheckbox: ['itemCheckbox']\n      // itemDragAndDropOverlay: ['itemDragAndDropOverlay'], => feature not available on this component\n      // itemErrorIcon: ['itemErrorIcon'], => feature not available on this component\n    };\n    return composeClasses(slots, getSimpleTreeViewUtilityClass, classes);\n  }, [classes]);\n};\nexport const SimpleTreeViewRoot = styled('ul', {\n  name: 'MuiSimpleTreeView',\n  slot: 'Root'\n})({\n  padding: 0,\n  margin: 0,\n  listStyle: 'none',\n  outline: 0,\n  position: 'relative'\n});\nconst EMPTY_ITEMS = [];\n\n/**\n *\n * Demos:\n *\n * - [Tree View](https://mui.com/x/react-tree-view/)\n *\n * API:\n *\n * - [SimpleTreeView API](https://mui.com/x/api/tree-view/simple-tree-view/)\n */\nconst SimpleTreeView = /*#__PURE__*/React.forwardRef(function SimpleTreeView(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSimpleTreeView'\n  });\n  const {\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  if (process.env.NODE_ENV !== 'production') {\n    if (props.items != null) {\n      warnOnce(['MUI X: The Simple Tree View component does not support the `items` prop.', 'If you want to add items, you need to pass them as JSX children.', 'Check the documentation for more details: https://mui.com/x/react-tree-view/simple-tree-view/items/.']);\n    }\n  }\n  const {\n    getRootProps,\n    contextValue\n  } = useTreeView({\n    plugins: SIMPLE_TREE_VIEW_PLUGINS,\n    rootRef: ref,\n    props: _extends({}, other, {\n      items: EMPTY_ITEMS\n    })\n  });\n  const classes = useUtilityClasses(props);\n  const Root = slots?.root ?? SimpleTreeViewRoot;\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps?.root,\n    className: classes.root,\n    getSlotProps: getRootProps,\n    ownerState: props\n  });\n  return /*#__PURE__*/_jsx(TreeViewProvider, {\n    contextValue: contextValue,\n    classes: classes,\n    slots: slots,\n    slotProps: slotProps,\n    children: /*#__PURE__*/_jsx(Root, _extends({}, rootProps))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SimpleTreeView.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Tree View manipulation. Can be instantiated with `useTreeViewApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.shape({\n      focusItem: PropTypes.func.isRequired,\n      getItem: PropTypes.func.isRequired,\n      getItemDOMElement: PropTypes.func.isRequired,\n      getItemOrderedChildrenIds: PropTypes.func.isRequired,\n      getItemTree: PropTypes.func.isRequired,\n      getParentId: PropTypes.func.isRequired,\n      setIsItemDisabled: PropTypes.func.isRequired,\n      setItemExpansion: PropTypes.func.isRequired,\n      setItemSelection: PropTypes.func.isRequired\n    })\n  }),\n  /**\n   * If `true`, the Tree View renders a checkbox at the left of its label that allows selecting it.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  /**\n   * Expanded item ids.\n   * Used when the item's expansion is not controlled.\n   * @default []\n   */\n  defaultExpandedItems: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * Selected item ids. (Uncontrolled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   * @default []\n   */\n  defaultSelectedItems: PropTypes.any,\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n  /**\n   * If `true` selection is disabled.\n   * @default false\n   */\n  disableSelection: PropTypes.bool,\n  /**\n   * Expanded item ids.\n   * Used when the item's expansion is controlled.\n   */\n  expandedItems: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * The slot that triggers the item's expansion when clicked.\n   * @default 'content'\n   */\n  expansionTrigger: PropTypes.oneOf(['content', 'iconContainer']),\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n  /**\n   * Horizontal indentation between an item and its children.\n   * Examples: 24, \"24px\", \"2rem\", \"2em\".\n   * @default 12px\n   */\n  itemChildrenIndentation: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * If `true`, `ctrl` and `shift` will trigger multiselect.\n   * @default false\n   */\n  multiSelect: PropTypes.bool,\n  /**\n   * Callback fired when Tree Items are expanded/collapsed.\n   * @param {React.SyntheticEvent} event The DOM event that triggered the change. Can be null when the change is caused by the `publicAPI.setItemExpansion()` method.\n   * @param {array} itemIds The ids of the expanded items.\n   */\n  onExpandedItemsChange: PropTypes.func,\n  /**\n   * Callback fired when the `content` slot of a given Tree Item is clicked.\n   * @param {React.MouseEvent} event The DOM event that triggered the change.\n   * @param {string} itemId The id of the focused item.\n   */\n  onItemClick: PropTypes.func,\n  /**\n   * Callback fired when a Tree Item is expanded or collapsed.\n   * @param {React.SyntheticEvent | null} event The DOM event that triggered the change. Can be null when the change is caused by the `publicAPI.setItemExpansion()` method.\n   * @param {array} itemId The itemId of the modified item.\n   * @param {array} isExpanded `true` if the item has just been expanded, `false` if it has just been collapsed.\n   */\n  onItemExpansionToggle: PropTypes.func,\n  /**\n   * Callback fired when a given Tree Item is focused.\n   * @param {React.SyntheticEvent | null} event The DOM event that triggered the change. **Warning**: This is a generic event not a focus event.\n   * @param {string} itemId The id of the focused item.\n   */\n  onItemFocus: PropTypes.func,\n  /**\n   * Callback fired when a Tree Item is selected or deselected.\n   * @param {React.SyntheticEvent} event The DOM event that triggered the change. Can be null when the change is caused by the `publicAPI.setItemSelection()` method.\n   * @param {array} itemId The itemId of the modified item.\n   * @param {array} isSelected `true` if the item has just been selected, `false` if it has just been deselected.\n   */\n  onItemSelectionToggle: PropTypes.func,\n  /**\n   * Callback fired when Tree Items are selected/deselected.\n   * @param {React.SyntheticEvent} event The DOM event that triggered the change. Can be null when the change is caused by the `publicAPI.setItemSelection()` method.\n   * @param {string[] | string} itemIds The ids of the selected items.\n   * When `multiSelect` is `true`, this is an array of strings; when false (default) a string.\n   */\n  onSelectedItemsChange: PropTypes.func,\n  /**\n   * Selected item ids. (Controlled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  selectedItems: PropTypes.any,\n  /**\n   * When `selectionPropagation.descendants` is set to `true`.\n   *\n   * - Selecting a parent selects all its descendants automatically.\n   * - Deselecting a parent deselects all its descendants automatically.\n   *\n   * When `selectionPropagation.parents` is set to `true`.\n   *\n   * - Selecting all the descendants of a parent selects the parent automatically.\n   * - Deselecting a descendant of a selected parent deselects the parent automatically.\n   *\n   * Only works when `multiSelect` is `true`.\n   * On the <SimpleTreeView />, only the expanded items are considered (since the collapsed item are not passed to the Tree View component at all)\n   *\n   * @default { parents: false, descendants: false }\n   */\n  selectionPropagation: PropTypes.shape({\n    descendants: PropTypes.bool,\n    parents: PropTypes.bool\n  }),\n  /**\n   * The props used for each component slot.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   */\n  slots: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { SimpleTreeView };", "const warnedOnceCache = new Set();\n\n/**\n * Logs a message to the console on development mode. The warning will only be logged once.\n *\n * The message is the log's cache key. Two identical messages will only be logged once.\n *\n * This function is a no-op in production.\n *\n * @param message the message to log\n * @param gravity the gravity of the warning. Defaults to `'warning'`.\n * @returns\n */\nexport function warnOnce(message, gravity = 'warning') {\n  if (process.env.NODE_ENV === 'production') {\n    return;\n  }\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  if (!warnedOnceCache.has(cleanMessage)) {\n    warnedOnceCache.add(cleanMessage);\n    if (gravity === 'error') {\n      console.error(cleanMessage);\n    } else {\n      console.warn(cleanMessage);\n    }\n  }\n}\nexport function clearWarningsCache() {\n  warnedOnceCache.clear();\n}", "import generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nexport function getSimpleTreeViewUtilityClass(slot) {\n  return generateUtilityClass('MuiSimpleTreeView', slot);\n}\nexport const simpleTreeViewClasses = generateUtilityClasses('MuiSimpleTreeView', ['root', 'item', 'itemContent', 'itemGroupTransition', 'itemIconContainer', 'itemLabel', 'itemCheckbox']);", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useForkRef from '@mui/utils/useForkRef';\nimport { TREE_VIEW_CORE_PLUGINS } from \"../corePlugins/index.js\";\nimport { useExtractPluginParamsFromProps } from \"./useExtractPluginParamsFromProps.js\";\nimport { useTreeViewBuildContext } from \"./useTreeViewBuildContext.js\";\nimport { TreeViewStore } from \"../utils/TreeViewStore.js\";\nfunction initializeInputApiRef(inputApiRef) {\n  if (inputApiRef.current == null) {\n    inputApiRef.current = {};\n  }\n  return inputApiRef;\n}\nexport function useTreeViewApiInitialization(inputApiRef) {\n  const fallbackPublicApiRef = React.useRef({});\n  if (inputApiRef) {\n    return initializeInputApiRef(inputApiRef);\n  }\n  return fallbackPublicApiRef;\n}\nlet globalId = 0;\n\n/**\n * This is the main hook that sets the plugin system up for the tree-view.\n *\n * It manages the data used to create the tree-view.\n *\n * @param plugins All the plugins that will be used in the tree-view.\n * @param props The props passed to the tree-view.\n * @param rootRef The ref of the root element.\n */\nexport const useTreeView = ({\n  plugins: inPlugins,\n  rootRef,\n  props\n}) => {\n  const plugins = React.useMemo(() => [...TREE_VIEW_CORE_PLUGINS, ...inPlugins], [inPlugins]);\n  const {\n    pluginParams,\n    forwardedProps,\n    apiRef\n  } = useExtractPluginParamsFromProps({\n    plugins,\n    props\n  });\n  const instanceRef = React.useRef({});\n  const instance = instanceRef.current;\n  const publicAPI = useTreeViewApiInitialization(apiRef);\n  const innerRootRef = React.useRef(null);\n  const handleRootRef = useForkRef(innerRootRef, rootRef);\n  const storeRef = React.useRef(null);\n  if (storeRef.current == null) {\n    globalId += 1;\n    const initialState = {\n      cacheKey: {\n        id: globalId\n      }\n    };\n    plugins.forEach(plugin => {\n      if (plugin.getInitialState) {\n        Object.assign(initialState, plugin.getInitialState(pluginParams));\n      }\n    });\n    storeRef.current = new TreeViewStore(initialState);\n  }\n  const contextValue = useTreeViewBuildContext({\n    plugins,\n    instance,\n    publicAPI: publicAPI.current,\n    store: storeRef.current,\n    rootRef: innerRootRef\n  });\n  const rootPropsGetters = [];\n  const runPlugin = plugin => {\n    const pluginResponse = plugin({\n      instance,\n      params: pluginParams,\n      rootRef: innerRootRef,\n      plugins,\n      store: storeRef.current\n    });\n    if (pluginResponse.getRootProps) {\n      rootPropsGetters.push(pluginResponse.getRootProps);\n    }\n    if (pluginResponse.publicAPI) {\n      Object.assign(publicAPI.current, pluginResponse.publicAPI);\n    }\n    if (pluginResponse.instance) {\n      Object.assign(instance, pluginResponse.instance);\n    }\n  };\n  plugins.forEach(runPlugin);\n  const getRootProps = (otherHandlers = {}) => {\n    const rootProps = _extends({\n      role: 'tree'\n    }, forwardedProps, otherHandlers, {\n      ref: handleRootRef\n    });\n    rootPropsGetters.forEach(rootPropsGetter => {\n      Object.assign(rootProps, rootPropsGetter(otherHandlers));\n    });\n    return rootProps;\n  };\n  return {\n    getRootProps,\n    rootRef: handleRootRef,\n    contextValue\n  };\n};", "import * as React from 'react';\nimport { EventManager } from '@mui/x-internals/EventManager';\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport const useTreeViewInstanceEvents = () => {\n  const [eventManager] = React.useState(() => new EventManager());\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    eventManager.emit(name, params, event);\n  }, [eventManager]);\n  const subscribeEvent = React.useCallback((event, handler) => {\n    eventManager.on(event, handler);\n    return () => {\n      eventManager.removeListener(event, handler);\n    };\n  }, [eventManager]);\n  return {\n    instance: {\n      $$publishEvent: publishEvent,\n      $$subscribeEvent: subscribeEvent\n    }\n  };\n};\nuseTreeViewInstanceEvents.params = {};", "// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}", "export const useTreeViewOptionalPlugins = ({\n  plugins\n}) => {\n  const pluginSet = new Set(plugins);\n  const getAvailablePlugins = () => pluginSet;\n  return {\n    instance: {\n      getAvailablePlugins\n    }\n  };\n};\nuseTreeViewOptionalPlugins.params = {};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useSelector } from \"../../hooks/useSelector.js\";\nimport { selectorTreeViewId } from \"./useTreeViewId.selectors.js\";\nimport { createTreeViewDefaultId } from \"./useTreeViewId.utils.js\";\nexport const useTreeViewId = ({\n  params,\n  store\n}) => {\n  React.useEffect(() => {\n    store.update(prevState => {\n      if (params.id === prevState.id.providedTreeId && prevState.id.treeId !== undefined) {\n        return prevState;\n      }\n      return _extends({}, prevState, {\n        id: _extends({}, prevState.id, {\n          treeId: params.id ?? createTreeViewDefaultId()\n        })\n      });\n    });\n  }, [store, params.id]);\n  const treeId = useSelector(store, selectorTreeViewId);\n  return {\n    getRootProps: () => ({\n      id: treeId\n    })\n  };\n};\nuseTreeViewId.params = {\n  id: true\n};\nuseTreeViewId.getInitialState = ({\n  id\n}) => ({\n  id: {\n    treeId: undefined,\n    providedTreeId: id\n  }\n});", "import { useTreeViewInstanceEvents } from \"./useTreeViewInstanceEvents/index.js\";\nimport { useTreeViewOptionalPlugins } from \"./useTreeViewOptionalPlugins/index.js\";\nimport { useTreeViewId } from \"./useTreeViewId/index.js\";\n/**\n * Internal plugins that create the tools used by the other plugins.\n * These plugins are used by the Tree View components.\n */\nexport const TREE_VIEW_CORE_PLUGINS = [useTreeViewInstanceEvents, useTreeViewOptionalPlugins, useTreeViewId];", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"apiRef\"];\nimport * as React from 'react';\nexport const useExtractPluginParamsFromProps = _ref => {\n  let {\n      props: {\n        apiRef\n      },\n      plugins\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref.props, _excluded);\n  const paramsLookup = React.useMemo(() => {\n    const tempParamsLookup = {};\n    plugins.forEach(plugin => {\n      Object.assign(tempParamsLookup, plugin.params);\n    });\n    return tempParamsLookup;\n  }, [plugins]);\n  const {\n    forwardedProps,\n    pluginParams\n  } = React.useMemo(() => {\n    const tempPluginParams = {};\n    const tempForwardedProps = {};\n    Object.keys(props).forEach(propName => {\n      const prop = props[propName];\n      if (paramsLookup[propName]) {\n        tempPluginParams[propName] = prop;\n      } else {\n        tempForwardedProps[propName] = prop;\n      }\n    });\n    const pluginParamsWithDefaults = plugins.reduce((acc, plugin) => {\n      if (plugin.applyDefaultValuesToParams) {\n        return plugin.applyDefaultValuesToParams({\n          params: acc\n        });\n      }\n      return acc;\n    }, tempPluginParams);\n    return {\n      forwardedProps: tempForwardedProps,\n      pluginParams: pluginParamsWithDefaults\n    };\n  }, [plugins, props, paramsLookup]);\n  return {\n    forwardedProps,\n    pluginParams,\n    apiRef\n  };\n};", "import * as React from 'react';\nexport const useTreeViewBuildContext = parameters => {\n  const {\n    plugins,\n    instance,\n    publicAPI,\n    store,\n    rootRef\n  } = parameters;\n  const runItemPlugins = React.useCallback(itemPluginProps => {\n    let finalRootRef = null;\n    let finalContentRef = null;\n    const pluginPropEnhancers = [];\n    const pluginPropEnhancersNames = {};\n    plugins.forEach(plugin => {\n      if (!plugin.itemPlugin) {\n        return;\n      }\n      const itemPluginResponse = plugin.itemPlugin({\n        props: itemPluginProps,\n        rootRef: finalRootRef,\n        contentRef: finalContentRef\n      });\n      if (itemPluginResponse?.rootRef) {\n        finalRootRef = itemPluginResponse.rootRef;\n      }\n      if (itemPluginResponse?.contentRef) {\n        finalContentRef = itemPluginResponse.contentRef;\n      }\n      if (itemPluginResponse?.propsEnhancers) {\n        pluginPropEnhancers.push(itemPluginResponse.propsEnhancers);\n\n        // Prepare a list of all the slots which are enhanced by at least one plugin\n        Object.keys(itemPluginResponse.propsEnhancers).forEach(propsEnhancerName => {\n          pluginPropEnhancersNames[propsEnhancerName] = true;\n        });\n      }\n    });\n    const resolvePropsEnhancer = currentSlotName => currentSlotParams => {\n      const enhancedProps = {};\n      pluginPropEnhancers.forEach(propsEnhancersForCurrentPlugin => {\n        const propsEnhancerForCurrentPluginAndSlot = propsEnhancersForCurrentPlugin[currentSlotName];\n        if (propsEnhancerForCurrentPluginAndSlot != null) {\n          Object.assign(enhancedProps, propsEnhancerForCurrentPluginAndSlot(currentSlotParams));\n        }\n      });\n      return enhancedProps;\n    };\n    const propsEnhancers = Object.fromEntries(Object.keys(pluginPropEnhancersNames).map(propEnhancerName => [propEnhancerName, resolvePropsEnhancer(propEnhancerName)]));\n    return {\n      contentRef: finalContentRef,\n      rootRef: finalRootRef,\n      propsEnhancers\n    };\n  }, [plugins]);\n  const wrapItem = React.useCallback(({\n    itemId,\n    children,\n    idAttribute\n  }) => {\n    let finalChildren = children;\n    // The wrappers are reversed to ensure that the first wrapper is the outermost one.\n    for (let i = plugins.length - 1; i >= 0; i -= 1) {\n      const plugin = plugins[i];\n      if (plugin.wrapItem) {\n        finalChildren = plugin.wrapItem({\n          instance,\n          itemId,\n          children: finalChildren,\n          idAttribute\n        });\n      }\n    }\n    return finalChildren;\n  }, [plugins, instance]);\n  const wrapRoot = React.useCallback(({\n    children\n  }) => {\n    let finalChildren = children;\n    // The wrappers are reversed to ensure that the first wrapper is the outermost one.\n    for (let i = plugins.length - 1; i >= 0; i -= 1) {\n      const plugin = plugins[i];\n      if (plugin.wrapRoot) {\n        finalChildren = plugin.wrapRoot({\n          children: finalChildren\n        });\n      }\n    }\n    return finalChildren;\n  }, [plugins]);\n  return React.useMemo(() => ({\n    runItemPlugins,\n    wrapItem,\n    wrapRoot,\n    instance,\n    publicAPI,\n    store,\n    rootRef\n  }), [runItemPlugins, wrapItem, wrapRoot, instance, publicAPI, store, rootRef]);\n};", "export class TreeViewStore {\n  constructor(value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = updater => {\n      const newState = updater(this.value);\n      if (newState !== this.value) {\n        this.value = newState;\n        this.listeners.forEach(l => l(newState));\n      }\n    };\n    this.value = value;\n    this.listeners = new Set();\n  }\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { publishTreeViewEvent } from \"../../utils/publishTreeViewEvent.js\";\nimport { buildSiblingIndexes, TREE_VIEW_ROOT_PARENT_ID } from \"./useTreeViewItems.utils.js\";\nimport { TreeViewItemDepthContext } from \"../../TreeViewItemDepthContext/index.js\";\nimport { selectorItemMeta, selectorItemOrderedChildrenIds, selectorItemModel, selectorItemDepth } from \"./useTreeViewItems.selectors.js\";\nimport { selectorTreeViewId } from \"../../corePlugins/useTreeViewId/useTreeViewId.selectors.js\";\nimport { generateTreeItemIdAttribute } from \"../../corePlugins/useTreeViewId/useTreeViewId.utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst checkId = (id, item, itemMetaLookup) => {\n  if (id == null) {\n    throw new Error(['MUI X: The Tree View component requires all items to have a unique `id` property.', 'Alternatively, you can use the `getItemId` prop to specify a custom id for each item.', 'An item was provided without id in the `items` prop:', JSON.stringify(item)].join('\\n'));\n  }\n  if (itemMetaLookup[id] != null) {\n    throw new Error(['MUI X: The Tree View component requires all items to have a unique `id` property.', 'Alternatively, you can use the `getItemId` prop to specify a custom id for each item.', `Two items were provided with the same id in the \\`items\\` prop: \"${id}\"`].join('\\n'));\n  }\n};\nconst processItemsLookups = ({\n  disabledItemsFocusable,\n  items,\n  isItemDisabled,\n  getItemLabel,\n  getItemId,\n  initialDepth = 0,\n  initialParentId = null,\n  getChildrenCount,\n  ignoreChildren = false\n}) => {\n  const itemMetaLookup = {};\n  const itemModelLookup = {};\n  const itemOrderedChildrenIdsLookup = {\n    [TREE_VIEW_ROOT_PARENT_ID]: []\n  };\n  const processItem = (item, depth, parentId) => {\n    const id = getItemId ? getItemId(item) : item.id;\n    checkId(id, item, itemMetaLookup);\n    const label = getItemLabel ? getItemLabel(item) : item.label;\n    if (label == null) {\n      throw new Error(['MUI X: The Tree View component requires all items to have a `label` property.', 'Alternatively, you can use the `getItemLabel` prop to specify a custom label for each item.', 'An item was provided without label in the `items` prop:', JSON.stringify(item)].join('\\n'));\n    }\n    itemMetaLookup[id] = {\n      id,\n      label,\n      parentId,\n      idAttribute: undefined,\n      expandable: getChildrenCount ? getChildrenCount(item) > 0 : !!item.children?.length,\n      disabled: isItemDisabled ? isItemDisabled(item) : false,\n      depth\n    };\n    itemModelLookup[id] = item;\n    const parentIdWithDefault = parentId ?? TREE_VIEW_ROOT_PARENT_ID;\n    if (!itemOrderedChildrenIdsLookup[parentIdWithDefault]) {\n      itemOrderedChildrenIdsLookup[parentIdWithDefault] = [];\n    }\n    itemOrderedChildrenIdsLookup[parentIdWithDefault].push(id);\n\n    // if lazy loading is enabled, we don't want to process children passed through the `items` prop\n    if (!ignoreChildren) {\n      item.children?.forEach(child => processItem(child, depth + 1, id));\n    }\n  };\n  items?.forEach(item => processItem(item, initialDepth, initialParentId));\n  const itemChildrenIndexesLookup = {};\n  Object.keys(itemOrderedChildrenIdsLookup).forEach(parentId => {\n    itemChildrenIndexesLookup[parentId] = buildSiblingIndexes(itemOrderedChildrenIdsLookup[parentId]);\n  });\n  return {\n    disabledItemsFocusable,\n    itemMetaLookup,\n    itemModelLookup,\n    itemOrderedChildrenIdsLookup,\n    itemChildrenIndexesLookup\n  };\n};\nexport const useTreeViewItems = ({\n  instance,\n  params,\n  store\n}) => {\n  const getItem = React.useCallback(itemId => selectorItemModel(store.value, itemId), [store]);\n  const getParentId = React.useCallback(itemId => {\n    const itemMeta = selectorItemMeta(store.value, itemId);\n    return itemMeta?.parentId || null;\n  }, [store]);\n  const setTreeViewLoading = useEventCallback(isLoading => {\n    store.update(prevState => _extends({}, prevState, {\n      items: _extends({}, prevState.items, {\n        loading: isLoading\n      })\n    }));\n  });\n  const setTreeViewError = useEventCallback(error => {\n    store.update(prevState => _extends({}, prevState, {\n      items: _extends({}, prevState.items, {\n        error\n      })\n    }));\n  });\n  const setIsItemDisabled = useEventCallback(({\n    itemId,\n    shouldBeDisabled\n  }) => {\n    store.update(prevState => {\n      if (!prevState.items.itemMetaLookup[itemId]) {\n        return prevState;\n      }\n      const itemMetaLookup = _extends({}, prevState.items.itemMetaLookup);\n      itemMetaLookup[itemId] = _extends({}, itemMetaLookup[itemId], {\n        disabled: shouldBeDisabled ?? !itemMetaLookup[itemId].disabled\n      });\n      return _extends({}, prevState, {\n        items: _extends({}, prevState.items, {\n          itemMetaLookup\n        })\n      });\n    });\n  });\n  const getItemTree = React.useCallback(() => {\n    const getItemFromItemId = itemId => {\n      const item = selectorItemModel(store.value, itemId);\n      const newChildren = selectorItemOrderedChildrenIds(store.value, itemId);\n      if (newChildren.length > 0) {\n        item.children = newChildren.map(getItemFromItemId);\n      } else {\n        delete item.children;\n      }\n      return item;\n    };\n    return selectorItemOrderedChildrenIds(store.value, null).map(getItemFromItemId);\n  }, [store]);\n  const getItemOrderedChildrenIds = React.useCallback(itemId => selectorItemOrderedChildrenIds(store.value, itemId), [store]);\n  const getItemDOMElement = itemId => {\n    const itemMeta = selectorItemMeta(store.value, itemId);\n    if (itemMeta == null) {\n      return null;\n    }\n    const idAttribute = generateTreeItemIdAttribute({\n      treeId: selectorTreeViewId(store.value),\n      itemId,\n      id: itemMeta.idAttribute\n    });\n    return document.getElementById(idAttribute);\n  };\n  const areItemUpdatesPreventedRef = React.useRef(false);\n  const preventItemUpdates = React.useCallback(() => {\n    areItemUpdatesPreventedRef.current = true;\n  }, []);\n  const areItemUpdatesPrevented = React.useCallback(() => areItemUpdatesPreventedRef.current, []);\n  const addItems = ({\n    items,\n    parentId,\n    depth,\n    getChildrenCount\n  }) => {\n    if (items) {\n      const newState = processItemsLookups({\n        disabledItemsFocusable: params.disabledItemsFocusable,\n        items,\n        isItemDisabled: params.isItemDisabled,\n        getItemId: params.getItemId,\n        getItemLabel: params.getItemLabel,\n        getChildrenCount,\n        initialDepth: depth,\n        initialParentId: parentId,\n        ignoreChildren: true\n      });\n      store.update(prevState => {\n        let newItems;\n        if (parentId) {\n          newItems = {\n            itemModelLookup: _extends({}, prevState.items.itemModelLookup, newState.itemModelLookup),\n            itemMetaLookup: _extends({}, prevState.items.itemMetaLookup, newState.itemMetaLookup),\n            itemOrderedChildrenIdsLookup: _extends({}, newState.itemOrderedChildrenIdsLookup, prevState.items.itemOrderedChildrenIdsLookup),\n            itemChildrenIndexesLookup: _extends({}, newState.itemChildrenIndexesLookup, prevState.items.itemChildrenIndexesLookup)\n          };\n        } else {\n          newItems = {\n            itemModelLookup: newState.itemModelLookup,\n            itemMetaLookup: newState.itemMetaLookup,\n            itemOrderedChildrenIdsLookup: newState.itemOrderedChildrenIdsLookup,\n            itemChildrenIndexesLookup: newState.itemChildrenIndexesLookup\n          };\n        }\n        Object.values(prevState.items.itemMetaLookup).forEach(item => {\n          if (!newState.itemMetaLookup[item.id]) {\n            publishTreeViewEvent(instance, 'removeItem', {\n              id: item.id\n            });\n          }\n        });\n        return _extends({}, prevState, {\n          items: _extends({}, prevState.items, newItems)\n        });\n      });\n    }\n  };\n  const removeChildren = parentId => {\n    store.update(prevState => {\n      if (!parentId) {\n        return _extends({}, prevState, {\n          items: _extends({}, prevState.items, {\n            itemMetaLookup: {},\n            itemOrderedChildrenIdsLookup: {},\n            itemChildrenIndexesLookup: {}\n          })\n        });\n      }\n      const newMetaMap = Object.keys(prevState.items.itemMetaLookup).reduce((acc, key) => {\n        const item = prevState.items.itemMetaLookup[key];\n        if (item.parentId === parentId) {\n          publishTreeViewEvent(instance, 'removeItem', {\n            id: item.id\n          });\n          return acc;\n        }\n        return _extends({}, acc, {\n          [item.id]: item\n        });\n      }, {});\n      const newItemOrderedChildrenIdsLookup = prevState.items.itemOrderedChildrenIdsLookup;\n      const newItemChildrenIndexesLookup = prevState.items.itemChildrenIndexesLookup;\n      delete newItemChildrenIndexesLookup[parentId];\n      delete newItemOrderedChildrenIdsLookup[parentId];\n      return _extends({}, prevState, {\n        items: _extends({}, prevState.items, {\n          itemMetaLookup: newMetaMap,\n          itemOrderedChildrenIdsLookup: newItemOrderedChildrenIdsLookup,\n          itemChildrenIndexesLookup: newItemChildrenIndexesLookup\n        })\n      });\n    });\n  };\n  React.useEffect(() => {\n    if (instance.areItemUpdatesPrevented()) {\n      return;\n    }\n    store.update(prevState => {\n      const newState = processItemsLookups({\n        disabledItemsFocusable: params.disabledItemsFocusable,\n        items: params.items,\n        isItemDisabled: params.isItemDisabled,\n        getItemId: params.getItemId,\n        getItemLabel: params.getItemLabel\n      });\n      Object.values(prevState.items.itemMetaLookup).forEach(item => {\n        if (!newState.itemMetaLookup[item.id]) {\n          publishTreeViewEvent(instance, 'removeItem', {\n            id: item.id\n          });\n        }\n      });\n      return _extends({}, prevState, {\n        items: _extends({}, prevState.items, newState)\n      });\n    });\n  }, [instance, store, params.items, params.disabledItemsFocusable, params.isItemDisabled, params.getItemId, params.getItemLabel]);\n\n  // Wrap `props.onItemClick` with `useEventCallback` to prevent unneeded context updates.\n  const handleItemClick = useEventCallback((event, itemId) => {\n    if (params.onItemClick) {\n      params.onItemClick(event, itemId);\n    }\n  });\n  return {\n    getRootProps: () => ({\n      style: {\n        '--TreeView-itemChildrenIndentation': typeof params.itemChildrenIndentation === 'number' ? `${params.itemChildrenIndentation}px` : params.itemChildrenIndentation\n      }\n    }),\n    publicAPI: {\n      getItem,\n      getItemDOMElement,\n      getItemTree,\n      getItemOrderedChildrenIds,\n      setIsItemDisabled,\n      getParentId\n    },\n    instance: {\n      getItemDOMElement,\n      preventItemUpdates,\n      areItemUpdatesPrevented,\n      addItems,\n      setTreeViewLoading,\n      setTreeViewError,\n      removeChildren,\n      handleItemClick\n    }\n  };\n};\nuseTreeViewItems.getInitialState = params => ({\n  items: _extends({}, processItemsLookups({\n    disabledItemsFocusable: params.disabledItemsFocusable,\n    items: params.items,\n    isItemDisabled: params.isItemDisabled,\n    getItemId: params.getItemId,\n    getItemLabel: params.getItemLabel\n  }), {\n    loading: false,\n    error: null\n  })\n});\nuseTreeViewItems.applyDefaultValuesToParams = ({\n  params\n}) => _extends({}, params, {\n  disabledItemsFocusable: params.disabledItemsFocusable ?? false,\n  itemChildrenIndentation: params.itemChildrenIndentation ?? '12px'\n});\nuseTreeViewItems.wrapRoot = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsx(TreeViewItemDepthContext.Provider, {\n    value: selectorItemDepth,\n    children: children\n  });\n};\nuseTreeViewItems.params = {\n  disabledItemsFocusable: true,\n  items: true,\n  isItemDisabled: true,\n  getItemLabel: true,\n  getItemId: true,\n  onItemClick: true,\n  itemChildrenIndentation: true\n};", "export const publishTreeViewEvent = (instance, eventName, params) => {\n  instance.$$publishEvent(eventName, params);\n};", "'use client';\n\nimport * as React from 'react';\nimport { warnOnce } from \"../warning/index.js\";\n\n/**\n * Make sure a controlled prop is used correctly.\n * Logs errors if the prop either:\n *\n * - switch between controlled and uncontrolled\n * - modify it's default value\n * @param parameters\n */\nfunction useAssertModelConsistencyOutsideOfProduction(parameters) {\n  const {\n    componentName,\n    propName,\n    controlled,\n    defaultValue,\n    warningPrefix = 'MUI X'\n  } = parameters;\n  const [{\n    initialDefaultValue,\n    isControlled\n  }] = React.useState({\n    initialDefaultValue: defaultValue,\n    isControlled: controlled !== undefined\n  });\n  if (isControlled !== (controlled !== undefined)) {\n    warnOnce([`${warningPrefix}: A component is changing the ${isControlled ? '' : 'un'}controlled ${propName} state of ${componentName} to be ${isControlled ? 'un' : ''}controlled.`, 'Elements should not switch from uncontrolled to controlled (or vice versa).', `Decide between using a controlled or uncontrolled ${propName} ` + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'], 'error');\n  }\n  if (JSON.stringify(initialDefaultValue) !== JSON.stringify(defaultValue)) {\n    warnOnce([`${warningPrefix}: A component is changing the default ${propName} state of an uncontrolled ${componentName} after being initialized. ` + `To suppress this warning opt to use a controlled ${componentName}.`], 'error');\n  }\n}\nexport const useAssertModelConsistency = process.env.NODE_ENV === 'production' ? () => {} : useAssertModelConsistencyOutsideOfProduction;", "export const getExpansionTrigger = ({\n  isItemEditable,\n  expansionTrigger\n}) => {\n  if (expansionTrigger) {\n    return expansionTrigger;\n  }\n  if (isItemEditable) {\n    return 'iconContainer';\n  }\n  return 'content';\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useAssertModelConsistency } from '@mui/x-internals/useAssertModelConsistency';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { selectorExpandedItems, selectorIsItemExpandable, selectorIsItemExpanded } from \"./useTreeViewExpansion.selectors.js\";\nimport { getExpansionTrigger } from \"./useTreeViewExpansion.utils.js\";\nimport { selectorItemMeta, selectorItemOrderedChildrenIds } from \"../useTreeViewItems/useTreeViewItems.selectors.js\";\nimport { publishTreeViewEvent } from \"../../utils/publishTreeViewEvent.js\";\nexport const useTreeViewExpansion = ({\n  instance,\n  store,\n  params\n}) => {\n  useAssertModelConsistency({\n    componentName: 'Tree View',\n    propName: 'expandedItems',\n    controlled: params.expandedItems,\n    defaultValue: params.defaultExpandedItems\n  });\n  useEnhancedEffect(() => {\n    store.update(prevState => {\n      const newExpansionTrigger = getExpansionTrigger({\n        isItemEditable: params.isItemEditable,\n        expansionTrigger: params.expansionTrigger\n      });\n      if (prevState.expansion.expansionTrigger === newExpansionTrigger) {\n        return prevState;\n      }\n      return _extends({}, prevState, {\n        expansion: _extends({}, prevState.expansion, {\n          expansionTrigger: newExpansionTrigger\n        })\n      });\n    });\n  }, [store, params.isItemEditable, params.expansionTrigger]);\n  const setExpandedItems = (event, value) => {\n    if (params.expandedItems === undefined) {\n      store.update(prevState => _extends({}, prevState, {\n        expansion: _extends({}, prevState.expansion, {\n          expandedItems: value\n        })\n      }));\n    }\n    params.onExpandedItemsChange?.(event, value);\n  };\n  const applyItemExpansion = useEventCallback(({\n    itemId,\n    event,\n    shouldBeExpanded\n  }) => {\n    const oldExpanded = selectorExpandedItems(store.value);\n    let newExpanded;\n    if (shouldBeExpanded) {\n      newExpanded = [itemId].concat(oldExpanded);\n    } else {\n      newExpanded = oldExpanded.filter(id => id !== itemId);\n    }\n    if (params.onItemExpansionToggle) {\n      params.onItemExpansionToggle(event, itemId, shouldBeExpanded);\n    }\n    setExpandedItems(event, newExpanded);\n  });\n  const setItemExpansion = useEventCallback(({\n    itemId,\n    event = null,\n    shouldBeExpanded\n  }) => {\n    const isExpandedBefore = selectorIsItemExpanded(store.value, itemId);\n    const cleanShouldBeExpanded = shouldBeExpanded ?? !isExpandedBefore;\n    if (isExpandedBefore === cleanShouldBeExpanded) {\n      return;\n    }\n    const eventParameters = {\n      isExpansionPrevented: false,\n      shouldBeExpanded: cleanShouldBeExpanded,\n      event,\n      itemId\n    };\n    publishTreeViewEvent(instance, 'beforeItemToggleExpansion', eventParameters);\n    if (eventParameters.isExpansionPrevented) {\n      return;\n    }\n    instance.applyItemExpansion({\n      itemId,\n      event,\n      shouldBeExpanded: cleanShouldBeExpanded\n    });\n  });\n  const expandAllSiblings = (event, itemId) => {\n    const itemMeta = selectorItemMeta(store.value, itemId);\n    if (itemMeta == null) {\n      return;\n    }\n    const siblings = selectorItemOrderedChildrenIds(store.value, itemMeta.parentId);\n    const diff = siblings.filter(child => selectorIsItemExpandable(store.value, child) && !selectorIsItemExpanded(store.value, child));\n    const newExpanded = selectorExpandedItems(store.value).concat(diff);\n    if (diff.length > 0) {\n      if (params.onItemExpansionToggle) {\n        diff.forEach(newlyExpandedItemId => {\n          params.onItemExpansionToggle(event, newlyExpandedItemId, true);\n        });\n      }\n      setExpandedItems(event, newExpanded);\n    }\n  };\n\n  /**\n   * Update the controlled model when the `expandedItems` prop changes.\n   */\n  useEnhancedEffect(() => {\n    const expandedItems = params.expandedItems;\n    if (expandedItems !== undefined) {\n      store.update(prevState => _extends({}, prevState, {\n        expansion: _extends({}, prevState.expansion, {\n          expandedItems\n        })\n      }));\n    }\n  }, [store, params.expandedItems]);\n  return {\n    publicAPI: {\n      setItemExpansion\n    },\n    instance: {\n      setItemExpansion,\n      applyItemExpansion,\n      expandAllSiblings\n    }\n  };\n};\nconst DEFAULT_EXPANDED_ITEMS = [];\nuseTreeViewExpansion.applyDefaultValuesToParams = ({\n  params\n}) => _extends({}, params, {\n  defaultExpandedItems: params.defaultExpandedItems ?? DEFAULT_EXPANDED_ITEMS\n});\nuseTreeViewExpansion.getInitialState = params => ({\n  expansion: {\n    expandedItems: params.expandedItems === undefined ? params.defaultExpandedItems : params.expandedItems,\n    expansionTrigger: getExpansionTrigger(params)\n  }\n});\nuseTreeViewExpansion.params = {\n  expandedItems: true,\n  defaultExpandedItems: true,\n  onExpandedItemsChange: true,\n  onItemExpansionToggle: true,\n  expansionTrigger: true\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useAssertModelConsistency } from '@mui/x-internals/useAssertModelConsistency';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { findOrderInTremauxTree, getAllNavigableItems, getFirstNavigableItem, getLastNavigableItem, getNonDisabledItemsInRange } from \"../../utils/tree.js\";\nimport { propagateSelection, getAddedAndRemovedItems, getLookupFromArray } from \"./useTreeViewSelection.utils.js\";\nimport { selectorIsItemSelected, selectorIsMultiSelectEnabled, selectorIsSelectionEnabled, selectorSelectionModel, selectorSelectionModelArray } from \"./useTreeViewSelection.selectors.js\";\nimport { useTreeViewSelectionItemPlugin } from \"./useTreeViewSelection.itemPlugin.js\";\nexport const useTreeViewSelection = ({\n  store,\n  params\n}) => {\n  useAssertModelConsistency({\n    componentName: 'Tree View',\n    propName: 'selectedItems',\n    controlled: params.selectedItems,\n    defaultValue: params.defaultSelectedItems\n  });\n  const lastSelectedItem = React.useRef(null);\n  const lastSelectedRange = React.useRef({});\n  const setSelectedItems = (event, newModel, additionalItemsToPropagate) => {\n    const oldModel = selectorSelectionModel(store.value);\n    let cleanModel;\n    const isMultiSelectEnabled = selectorIsMultiSelectEnabled(store.value);\n    if (isMultiSelectEnabled && (params.selectionPropagation.descendants || params.selectionPropagation.parents)) {\n      cleanModel = propagateSelection({\n        store,\n        selectionPropagation: params.selectionPropagation,\n        newModel: newModel,\n        oldModel: oldModel,\n        additionalItemsToPropagate\n      });\n    } else {\n      cleanModel = newModel;\n    }\n    if (params.onItemSelectionToggle) {\n      if (isMultiSelectEnabled) {\n        const changes = getAddedAndRemovedItems({\n          store,\n          newModel: cleanModel,\n          oldModel: oldModel\n        });\n        if (params.onItemSelectionToggle) {\n          changes.added.forEach(itemId => {\n            params.onItemSelectionToggle(event, itemId, true);\n          });\n          changes.removed.forEach(itemId => {\n            params.onItemSelectionToggle(event, itemId, false);\n          });\n        }\n      } else if (params.onItemSelectionToggle && cleanModel !== oldModel) {\n        if (oldModel != null) {\n          params.onItemSelectionToggle(event, oldModel, false);\n        }\n        if (cleanModel != null) {\n          params.onItemSelectionToggle(event, cleanModel, true);\n        }\n      }\n    }\n    if (params.selectedItems === undefined) {\n      store.update(prevState => _extends({}, prevState, {\n        selection: _extends({}, prevState.selection, {\n          selectedItems: cleanModel\n        })\n      }));\n    }\n    params.onSelectedItemsChange?.(event, cleanModel);\n  };\n  const setItemSelection = ({\n    itemId,\n    event = null,\n    keepExistingSelection = false,\n    shouldBeSelected\n  }) => {\n    if (!selectorIsSelectionEnabled(store.value)) {\n      return;\n    }\n    let newSelected;\n    const isMultiSelectEnabled = selectorIsMultiSelectEnabled(store.value);\n    if (keepExistingSelection) {\n      const oldSelected = selectorSelectionModelArray(store.value);\n      const isSelectedBefore = selectorIsItemSelected(store.value, itemId);\n      if (isSelectedBefore && (shouldBeSelected === false || shouldBeSelected == null)) {\n        newSelected = oldSelected.filter(id => id !== itemId);\n      } else if (!isSelectedBefore && (shouldBeSelected === true || shouldBeSelected == null)) {\n        newSelected = [itemId].concat(oldSelected);\n      } else {\n        newSelected = oldSelected;\n      }\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (shouldBeSelected === false || shouldBeSelected == null && selectorIsItemSelected(store.value, itemId)) {\n        newSelected = isMultiSelectEnabled ? [] : null;\n      } else {\n        newSelected = isMultiSelectEnabled ? [itemId] : itemId;\n      }\n    }\n    setSelectedItems(event, newSelected,\n    // If shouldBeSelected === selectorIsItemSelected(store, itemId), we still want to propagate the select.\n    // This is useful when the element is in an indeterminate state.\n    [itemId]);\n    lastSelectedItem.current = itemId;\n    lastSelectedRange.current = {};\n  };\n  const selectRange = (event, [start, end]) => {\n    const isMultiSelectEnabled = selectorIsMultiSelectEnabled(store.value);\n    if (!isMultiSelectEnabled) {\n      return;\n    }\n    let newSelectedItems = selectorSelectionModelArray(store.value).slice();\n\n    // If the last selection was a range selection,\n    // remove the items that were part of the last range from the model\n    if (Object.keys(lastSelectedRange.current).length > 0) {\n      newSelectedItems = newSelectedItems.filter(id => !lastSelectedRange.current[id]);\n    }\n\n    // Add to the model the items that are part of the new range and not already part of the model.\n    const selectedItemsLookup = getLookupFromArray(newSelectedItems);\n    const range = getNonDisabledItemsInRange(store.value, start, end);\n    const itemsToAddToModel = range.filter(id => !selectedItemsLookup[id]);\n    newSelectedItems = newSelectedItems.concat(itemsToAddToModel);\n    setSelectedItems(event, newSelectedItems);\n    lastSelectedRange.current = getLookupFromArray(range);\n  };\n  const expandSelectionRange = (event, itemId) => {\n    if (lastSelectedItem.current != null) {\n      const [start, end] = findOrderInTremauxTree(store.value, itemId, lastSelectedItem.current);\n      selectRange(event, [start, end]);\n    }\n  };\n  const selectRangeFromStartToItem = (event, itemId) => {\n    selectRange(event, [getFirstNavigableItem(store.value), itemId]);\n  };\n  const selectRangeFromItemToEnd = (event, itemId) => {\n    selectRange(event, [itemId, getLastNavigableItem(store.value)]);\n  };\n  const selectAllNavigableItems = event => {\n    const isMultiSelectEnabled = selectorIsMultiSelectEnabled(store.value);\n    if (!isMultiSelectEnabled) {\n      return;\n    }\n    const navigableItems = getAllNavigableItems(store.value);\n    setSelectedItems(event, navigableItems);\n    lastSelectedRange.current = getLookupFromArray(navigableItems);\n  };\n  const selectItemFromArrowNavigation = (event, currentItem, nextItem) => {\n    const isMultiSelectEnabled = selectorIsMultiSelectEnabled(store.value);\n    if (!isMultiSelectEnabled) {\n      return;\n    }\n    let newSelectedItems = selectorSelectionModelArray(store.value).slice();\n    if (Object.keys(lastSelectedRange.current).length === 0) {\n      newSelectedItems.push(nextItem);\n      lastSelectedRange.current = {\n        [currentItem]: true,\n        [nextItem]: true\n      };\n    } else {\n      if (!lastSelectedRange.current[currentItem]) {\n        lastSelectedRange.current = {};\n      }\n      if (lastSelectedRange.current[nextItem]) {\n        newSelectedItems = newSelectedItems.filter(id => id !== currentItem);\n        delete lastSelectedRange.current[currentItem];\n      } else {\n        newSelectedItems.push(nextItem);\n        lastSelectedRange.current[nextItem] = true;\n      }\n    }\n    setSelectedItems(event, newSelectedItems);\n  };\n  useEnhancedEffect(() => {\n    store.update(prevState => _extends({}, prevState, {\n      selection: {\n        selectedItems: params.selectedItems === undefined ? prevState.selection.selectedItems : params.selectedItems,\n        isEnabled: !params.disableSelection,\n        isMultiSelectEnabled: params.multiSelect,\n        isCheckboxSelectionEnabled: params.checkboxSelection,\n        selectionPropagation: {\n          descendants: params.selectionPropagation.descendants,\n          parents: params.selectionPropagation.parents\n        }\n      }\n    }));\n  }, [store, params.selectedItems, params.multiSelect, params.checkboxSelection, params.disableSelection, params.selectionPropagation.descendants, params.selectionPropagation.parents]);\n  return {\n    getRootProps: () => ({\n      'aria-multiselectable': params.multiSelect\n    }),\n    publicAPI: {\n      setItemSelection\n    },\n    instance: {\n      setItemSelection,\n      selectAllNavigableItems,\n      expandSelectionRange,\n      selectRangeFromStartToItem,\n      selectRangeFromItemToEnd,\n      selectItemFromArrowNavigation\n    }\n  };\n};\nuseTreeViewSelection.itemPlugin = useTreeViewSelectionItemPlugin;\nconst DEFAULT_SELECTED_ITEMS = [];\nconst EMPTY_SELECTION_PROPAGATION = {};\nuseTreeViewSelection.applyDefaultValuesToParams = ({\n  params\n}) => _extends({}, params, {\n  disableSelection: params.disableSelection ?? false,\n  multiSelect: params.multiSelect ?? false,\n  checkboxSelection: params.checkboxSelection ?? false,\n  defaultSelectedItems: params.defaultSelectedItems ?? (params.multiSelect ? DEFAULT_SELECTED_ITEMS : null),\n  selectionPropagation: params.selectionPropagation ?? EMPTY_SELECTION_PROPAGATION\n});\nuseTreeViewSelection.getInitialState = params => ({\n  selection: {\n    selectedItems: params.selectedItems === undefined ? params.defaultSelectedItems : params.selectedItems,\n    isEnabled: !params.disableSelection,\n    isMultiSelectEnabled: params.multiSelect,\n    isCheckboxSelectionEnabled: params.checkboxSelection,\n    selectionPropagation: params.selectionPropagation\n  }\n});\nuseTreeViewSelection.params = {\n  disableSelection: true,\n  multiSelect: true,\n  checkboxSelection: true,\n  defaultSelectedItems: true,\n  selectedItems: true,\n  onSelectedItemsChange: true,\n  onItemSelectionToggle: true,\n  selectionPropagation: true\n};", "import { selectorIsItemSelected } from \"./useTreeViewSelection.selectors.js\";\nimport { selectorItemOrderedChildrenIds, selectorItemParentId } from \"../useTreeViewItems/useTreeViewItems.selectors.js\";\nexport const getLookupFromArray = array => {\n  const lookup = {};\n  array.forEach(itemId => {\n    lookup[itemId] = true;\n  });\n  return lookup;\n};\nexport const getAddedAndRemovedItems = ({\n  store,\n  oldModel,\n  newModel\n}) => {\n  const newModelMap = new Map();\n  newModel.forEach(id => {\n    newModelMap.set(id, true);\n  });\n  return {\n    added: newModel.filter(itemId => !selectorIsItemSelected(store.value, itemId)),\n    removed: oldModel.filter(itemId => !newModelMap.has(itemId))\n  };\n};\nexport const propagateSelection = ({\n  store,\n  selectionPropagation,\n  newModel,\n  oldModel,\n  additionalItemsToPropagate\n}) => {\n  if (!selectionPropagation.descendants && !selectionPropagation.parents) {\n    return newModel;\n  }\n  let shouldRegenerateModel = false;\n  const newModelLookup = getLookupFromArray(newModel);\n  const changes = getAddedAndRemovedItems({\n    store,\n    newModel,\n    oldModel\n  });\n  additionalItemsToPropagate?.forEach(itemId => {\n    if (newModelLookup[itemId]) {\n      if (!changes.added.includes(itemId)) {\n        changes.added.push(itemId);\n      }\n    } else if (!changes.removed.includes(itemId)) {\n      changes.removed.push(itemId);\n    }\n  });\n  changes.added.forEach(addedItemId => {\n    if (selectionPropagation.descendants) {\n      const selectDescendants = itemId => {\n        if (itemId !== addedItemId) {\n          shouldRegenerateModel = true;\n          newModelLookup[itemId] = true;\n        }\n        selectorItemOrderedChildrenIds(store.value, itemId).forEach(selectDescendants);\n      };\n      selectDescendants(addedItemId);\n    }\n    if (selectionPropagation.parents) {\n      const checkAllDescendantsSelected = itemId => {\n        if (!newModelLookup[itemId]) {\n          return false;\n        }\n        const children = selectorItemOrderedChildrenIds(store.value, itemId);\n        return children.every(checkAllDescendantsSelected);\n      };\n      const selectParents = itemId => {\n        const parentId = selectorItemParentId(store.value, itemId);\n        if (parentId == null) {\n          return;\n        }\n        const siblings = selectorItemOrderedChildrenIds(store.value, parentId);\n        if (siblings.every(checkAllDescendantsSelected)) {\n          shouldRegenerateModel = true;\n          newModelLookup[parentId] = true;\n          selectParents(parentId);\n        }\n      };\n      selectParents(addedItemId);\n    }\n  });\n  changes.removed.forEach(removedItemId => {\n    if (selectionPropagation.parents) {\n      let parentId = selectorItemParentId(store.value, removedItemId);\n      while (parentId != null) {\n        if (newModelLookup[parentId]) {\n          shouldRegenerateModel = true;\n          delete newModelLookup[parentId];\n        }\n        parentId = selectorItemParentId(store.value, parentId);\n      }\n    }\n    if (selectionPropagation.descendants) {\n      const deSelectDescendants = itemId => {\n        if (itemId !== removedItemId) {\n          shouldRegenerateModel = true;\n          delete newModelLookup[itemId];\n        }\n        selectorItemOrderedChildrenIds(store.value, itemId).forEach(deSelectDescendants);\n      };\n      deSelectDescendants(removedItemId);\n    }\n  });\n  return shouldRegenerateModel ? Object.keys(newModelLookup) : newModel;\n};", "const is = Object.is;\n\n/**\n * Fast shallow compare for objects.\n * @returns true if objects are equal.\n */\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  return aLength === bLength;\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nimport { useTreeViewContext } from \"../../TreeViewProvider/index.js\";\nimport { selectorItemOrderedChildrenIds } from \"../useTreeViewItems/useTreeViewItems.selectors.js\";\nimport { selectorIsCheckboxSelectionEnabled, selectorIsItemSelected, selectorIsItemSelectionEnabled, selectorSelectionPropagationRules } from \"./useTreeViewSelection.selectors.js\";\nimport { useSelector } from \"../../hooks/useSelector.js\";\nfunction selectorItemCheckboxStatus(state, itemId) {\n  const isCheckboxSelectionEnabled = selectorIsCheckboxSelectionEnabled(state);\n  const isSelectionEnabledForItem = selectorIsItemSelectionEnabled(state, itemId);\n  if (selectorIsItemSelected(state, itemId)) {\n    return {\n      disabled: !isSelectionEnabledForItem,\n      visible: isCheckboxSelectionEnabled,\n      indeterminate: false,\n      checked: true\n    };\n  }\n  const children = selectorItemOrderedChildrenIds(state, itemId);\n  if (children.length === 0) {\n    return {\n      disabled: !isSelectionEnabledForItem,\n      visible: isCheckboxSelectionEnabled,\n      indeterminate: false,\n      checked: false\n    };\n  }\n  let hasSelectedDescendant = false;\n  let hasUnSelectedDescendant = false;\n  const traverseDescendants = itemToTraverseId => {\n    if (itemToTraverseId !== itemId) {\n      if (selectorIsItemSelected(state, itemToTraverseId)) {\n        hasSelectedDescendant = true;\n      } else {\n        hasUnSelectedDescendant = true;\n      }\n    }\n    selectorItemOrderedChildrenIds(state, itemToTraverseId).forEach(traverseDescendants);\n  };\n  traverseDescendants(itemId);\n  return {\n    disabled: !isSelectionEnabledForItem,\n    visible: isCheckboxSelectionEnabled,\n    indeterminate: hasSelectedDescendant && hasUnSelectedDescendant,\n    checked: selectorSelectionPropagationRules(state).parents ? hasSelectedDescendant && !hasUnSelectedDescendant : false\n  };\n}\nexport const useTreeViewSelectionItemPlugin = ({\n  props\n}) => {\n  const {\n    itemId\n  } = props;\n  const {\n    store\n  } = useTreeViewContext();\n  const checkboxStatus = useSelector(store, selectorItemCheckboxStatus, itemId, fastObjectShallowCompare);\n  return {\n    propsEnhancers: {\n      checkbox: ({\n        externalEventHandlers,\n        interactions\n      }) => {\n        const handleChange = event => {\n          externalEventHandlers.onChange?.(event);\n          if (event.defaultMuiPrevented) {\n            return;\n          }\n          if (!selectorIsItemSelectionEnabled(store.value, itemId)) {\n            return;\n          }\n          interactions.handleCheckboxSelection(event);\n        };\n        return _extends({\n          tabIndex: -1,\n          onChange: handleChange\n        }, checkboxStatus);\n      }\n    }\n  };\n};", "import * as React from 'react';\nimport { TimerBasedCleanupTracking } from \"../utils/cleanupTracking/TimerBasedCleanupTracking.js\";\nimport { FinalizationRegistryBasedCleanupTracking } from \"../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js\";\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseInstanceEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useInstanceEventHandler(instance, eventName, handler) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef(undefined);\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event);\n        }\n      };\n      subscription.current = instance.$$subscribeEvent(eventName, enhancedHandler);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event);\n          }\n        };\n        subscription.current = instance.$$subscribeEvent(eventName, enhancedHandler);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [instance, eventName]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useInstanceEventHandler = createUseInstanceEventHandler(registryContainer);", "// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}", "export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useInstanceEventHandler } from \"../../hooks/useInstanceEventHandler.js\";\nimport { selectorDefaultFocusableItemId, selectorFocusedItemId } from \"./useTreeViewFocus.selectors.js\";\nimport { selectorIsItemExpanded } from \"../useTreeViewExpansion/useTreeViewExpansion.selectors.js\";\nimport { selectorItemMeta } from \"../useTreeViewItems/useTreeViewItems.selectors.js\";\nexport const useTreeViewFocus = ({\n  instance,\n  params,\n  store\n}) => {\n  const setFocusedItemId = useEventCallback(itemId => {\n    store.update(prevState => {\n      const focusedItemId = selectorFocusedItemId(prevState);\n      if (focusedItemId === itemId) {\n        return prevState;\n      }\n      return _extends({}, prevState, {\n        focus: _extends({}, prevState.focus, {\n          focusedItemId: itemId\n        })\n      });\n    });\n  });\n  const isItemVisible = itemId => {\n    const itemMeta = selectorItemMeta(store.value, itemId);\n    return itemMeta && (itemMeta.parentId == null || selectorIsItemExpanded(store.value, itemMeta.parentId));\n  };\n  const innerFocusItem = (event, itemId) => {\n    const itemElement = instance.getItemDOMElement(itemId);\n    if (itemElement) {\n      itemElement.focus();\n    }\n    setFocusedItemId(itemId);\n    if (params.onItemFocus) {\n      params.onItemFocus(event, itemId);\n    }\n  };\n  const focusItem = useEventCallback((event, itemId) => {\n    // If we receive an itemId, and it is visible, the focus will be set to it\n    if (isItemVisible(itemId)) {\n      innerFocusItem(event, itemId);\n    }\n  });\n  const removeFocusedItem = useEventCallback(() => {\n    const focusedItemId = selectorFocusedItemId(store.value);\n    if (focusedItemId == null) {\n      return;\n    }\n    const itemMeta = selectorItemMeta(store.value, focusedItemId);\n    if (itemMeta) {\n      const itemElement = instance.getItemDOMElement(focusedItemId);\n      if (itemElement) {\n        itemElement.blur();\n      }\n    }\n    setFocusedItemId(null);\n  });\n  useInstanceEventHandler(instance, 'removeItem', ({\n    id\n  }) => {\n    const focusedItemId = selectorFocusedItemId(store.value);\n    const defaultFocusableItemId = selectorDefaultFocusableItemId(store.value);\n    if (focusedItemId === id && defaultFocusableItemId != null) {\n      innerFocusItem(null, defaultFocusableItemId);\n    }\n  });\n  const createRootHandleFocus = otherHandlers => event => {\n    otherHandlers.onFocus?.(event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    // if the event bubbled (which is React specific) we don't want to steal focus\n    const defaultFocusableItemId = selectorDefaultFocusableItemId(store.value);\n    if (event.target === event.currentTarget && defaultFocusableItemId != null) {\n      innerFocusItem(event, defaultFocusableItemId);\n    }\n  };\n  const createRootHandleBlur = otherHandlers => event => {\n    otherHandlers.onBlur?.(event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    setFocusedItemId(null);\n  };\n  return {\n    getRootProps: otherHandlers => ({\n      onFocus: createRootHandleFocus(otherHandlers),\n      onBlur: createRootHandleBlur(otherHandlers)\n    }),\n    publicAPI: {\n      focusItem\n    },\n    instance: {\n      focusItem,\n      removeFocusedItem\n    }\n  };\n};\nuseTreeViewFocus.getInitialState = () => ({\n  focus: {\n    focusedItemId: null\n  }\n});\nuseTreeViewFocus.params = {\n  onItemFocus: true\n};", "import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { getFirstNavigableItem, getLastNavigableItem, getNextNavigableItem, getPreviousNavigableItem, isTargetInDescendants } from \"../../utils/tree.js\";\nimport { hasPlugin } from \"../../utils/plugins.js\";\nimport { useTreeViewLabel } from \"../useTreeViewLabel/index.js\";\nimport { useSelector } from \"../../hooks/useSelector.js\";\nimport { selectorItemMetaLookup, selectorIsItemDisabled, selectorItemParentId } from \"../useTreeViewItems/useTreeViewItems.selectors.js\";\nimport { selectorIsItemBeingEdited, selectorIsItemEditable } from \"../useTreeViewLabel/useTreeViewLabel.selectors.js\";\nimport { selectorIsItemSelected, selectorIsMultiSelectEnabled, selectorIsSelectionEnabled } from \"../useTreeViewSelection/useTreeViewSelection.selectors.js\";\nimport { selectorIsItemExpandable, selectorIsItemExpanded } from \"../useTreeViewExpansion/useTreeViewExpansion.selectors.js\";\nfunction isPrintableKey(string) {\n  return !!string && string.length === 1 && !!string.match(/\\S/);\n}\nexport const useTreeViewKeyboardNavigation = ({\n  instance,\n  store,\n  params\n}) => {\n  const isRtl = useRtl();\n  const firstCharMap = React.useRef({});\n  const updateFirstCharMap = useEventCallback(callback => {\n    firstCharMap.current = callback(firstCharMap.current);\n  });\n  const itemMetaLookup = useSelector(store, selectorItemMetaLookup);\n  React.useEffect(() => {\n    if (instance.areItemUpdatesPrevented()) {\n      return;\n    }\n    const newFirstCharMap = {};\n    const processItem = item => {\n      newFirstCharMap[item.id] = item.label.substring(0, 1).toLowerCase();\n    };\n    Object.values(itemMetaLookup).forEach(processItem);\n    firstCharMap.current = newFirstCharMap;\n  }, [itemMetaLookup, params.getItemId, instance]);\n  const getFirstMatchingItem = (itemId, query) => {\n    const cleanQuery = query.toLowerCase();\n    const getNextItem = itemIdToCheck => {\n      const nextItemId = getNextNavigableItem(store.value, itemIdToCheck);\n      // We reached the end of the tree, check from the beginning\n      if (nextItemId === null) {\n        return getFirstNavigableItem(store.value);\n      }\n      return nextItemId;\n    };\n    let matchingItemId = null;\n    let currentItemId = getNextItem(itemId);\n    const checkedItems = {};\n    // The \"!checkedItems[currentItemId]\" condition avoids an infinite loop when there is no matching item.\n    while (matchingItemId == null && !checkedItems[currentItemId]) {\n      if (firstCharMap.current[currentItemId] === cleanQuery) {\n        matchingItemId = currentItemId;\n      } else {\n        checkedItems[currentItemId] = true;\n        currentItemId = getNextItem(currentItemId);\n      }\n    }\n    return matchingItemId;\n  };\n  const canToggleItemSelection = itemId => selectorIsSelectionEnabled(store.value) && !selectorIsItemDisabled(store.value, itemId);\n  const canToggleItemExpansion = itemId => {\n    return !selectorIsItemDisabled(store.value, itemId) && selectorIsItemExpandable(store.value, itemId);\n  };\n\n  // ARIA specification: https://www.w3.org/WAI/ARIA/apg/patterns/treeview/#keyboardinteraction\n  const handleItemKeyDown = async (event, itemId) => {\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (event.altKey || isTargetInDescendants(event.target, event.currentTarget)) {\n      return;\n    }\n    const ctrlPressed = event.ctrlKey || event.metaKey;\n    const key = event.key;\n    const isMultiSelectEnabled = selectorIsMultiSelectEnabled(store.value);\n\n    // eslint-disable-next-line default-case\n    switch (true) {\n      // Select the item when pressing \"Space\"\n      case key === ' ' && canToggleItemSelection(itemId):\n        {\n          event.preventDefault();\n          if (isMultiSelectEnabled && event.shiftKey) {\n            instance.expandSelectionRange(event, itemId);\n          } else {\n            instance.setItemSelection({\n              event,\n              itemId,\n              keepExistingSelection: isMultiSelectEnabled,\n              shouldBeSelected: undefined\n            });\n          }\n          break;\n        }\n\n      // If the focused item has children, we expand it.\n      // If the focused item has no children, we select it.\n      case key === 'Enter':\n        {\n          if (hasPlugin(instance, useTreeViewLabel) && selectorIsItemEditable(store.value, itemId) && !selectorIsItemBeingEdited(store.value, itemId)) {\n            instance.setEditedItemId(itemId);\n          } else if (canToggleItemExpansion(itemId)) {\n            instance.setItemExpansion({\n              event,\n              itemId\n            });\n            event.preventDefault();\n          } else if (canToggleItemSelection(itemId)) {\n            if (isMultiSelectEnabled) {\n              event.preventDefault();\n              instance.setItemSelection({\n                event,\n                itemId,\n                keepExistingSelection: true\n              });\n            } else if (!selectorIsItemSelected(store.value, itemId)) {\n              instance.setItemSelection({\n                event,\n                itemId\n              });\n              event.preventDefault();\n            }\n          }\n          break;\n        }\n\n      // Focus the next focusable item\n      case key === 'ArrowDown':\n        {\n          const nextItem = getNextNavigableItem(store.value, itemId);\n          if (nextItem) {\n            event.preventDefault();\n            instance.focusItem(event, nextItem);\n\n            // Multi select behavior when pressing Shift + ArrowDown\n            // Toggles the selection state of the next item\n            if (isMultiSelectEnabled && event.shiftKey && canToggleItemSelection(nextItem)) {\n              instance.selectItemFromArrowNavigation(event, itemId, nextItem);\n            }\n          }\n          break;\n        }\n\n      // Focuses the previous focusable item\n      case key === 'ArrowUp':\n        {\n          const previousItem = getPreviousNavigableItem(store.value, itemId);\n          if (previousItem) {\n            event.preventDefault();\n            instance.focusItem(event, previousItem);\n\n            // Multi select behavior when pressing Shift + ArrowUp\n            // Toggles the selection state of the previous item\n            if (isMultiSelectEnabled && event.shiftKey && canToggleItemSelection(previousItem)) {\n              instance.selectItemFromArrowNavigation(event, itemId, previousItem);\n            }\n          }\n          break;\n        }\n\n      // If the focused item is expanded, we move the focus to its first child\n      // If the focused item is collapsed and has children, we expand it\n      case key === 'ArrowRight' && !isRtl || key === 'ArrowLeft' && isRtl:\n        {\n          if (ctrlPressed) {\n            return;\n          }\n          if (selectorIsItemExpanded(store.value, itemId)) {\n            const nextItemId = getNextNavigableItem(store.value, itemId);\n            if (nextItemId) {\n              instance.focusItem(event, nextItemId);\n              event.preventDefault();\n            }\n          } else if (canToggleItemExpansion(itemId)) {\n            instance.setItemExpansion({\n              event,\n              itemId\n            });\n            event.preventDefault();\n          }\n          break;\n        }\n\n      // If the focused item is expanded, we collapse it\n      // If the focused item is collapsed and has a parent, we move the focus to this parent\n      case key === 'ArrowLeft' && !isRtl || key === 'ArrowRight' && isRtl:\n        {\n          if (ctrlPressed) {\n            return;\n          }\n          if (canToggleItemExpansion(itemId) && selectorIsItemExpanded(store.value, itemId)) {\n            instance.setItemExpansion({\n              event,\n              itemId\n            });\n            event.preventDefault();\n          } else {\n            const parent = selectorItemParentId(store.value, itemId);\n            if (parent) {\n              instance.focusItem(event, parent);\n              event.preventDefault();\n            }\n          }\n          break;\n        }\n\n      // Focuses the first item in the tree\n      case key === 'Home':\n        {\n          // Multi select behavior when pressing Ctrl + Shift + Home\n          // Selects the focused item and all items up to the first item.\n          if (canToggleItemSelection(itemId) && isMultiSelectEnabled && ctrlPressed && event.shiftKey) {\n            instance.selectRangeFromStartToItem(event, itemId);\n          } else {\n            instance.focusItem(event, getFirstNavigableItem(store.value));\n          }\n          event.preventDefault();\n          break;\n        }\n\n      // Focuses the last item in the tree\n      case key === 'End':\n        {\n          // Multi select behavior when pressing Ctrl + Shirt + End\n          // Selects the focused item and all the items down to the last item.\n          if (canToggleItemSelection(itemId) && isMultiSelectEnabled && ctrlPressed && event.shiftKey) {\n            instance.selectRangeFromItemToEnd(event, itemId);\n          } else {\n            instance.focusItem(event, getLastNavigableItem(store.value));\n          }\n          event.preventDefault();\n          break;\n        }\n\n      // Expand all siblings that are at the same level as the focused item\n      case key === '*':\n        {\n          instance.expandAllSiblings(event, itemId);\n          event.preventDefault();\n          break;\n        }\n\n      // Multi select behavior when pressing Ctrl + a\n      // Selects all the items\n      case String.fromCharCode(event.keyCode) === 'A' && ctrlPressed && isMultiSelectEnabled && selectorIsSelectionEnabled(store.value):\n        {\n          instance.selectAllNavigableItems(event);\n          event.preventDefault();\n          break;\n        }\n\n      // Type-ahead\n      // TODO: Support typing multiple characters\n      case !ctrlPressed && !event.shiftKey && isPrintableKey(key):\n        {\n          const matchingItem = getFirstMatchingItem(itemId, key);\n          if (matchingItem != null) {\n            instance.focusItem(event, matchingItem);\n            event.preventDefault();\n          }\n          break;\n        }\n    }\n  };\n  return {\n    instance: {\n      updateFirstCharMap,\n      handleItemKeyDown\n    }\n  };\n};\nuseTreeViewKeyboardNavigation.params = {};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport useForkRef from '@mui/utils/useForkRef';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { publishTreeViewEvent } from \"../../utils/publishTreeViewEvent.js\";\nimport { useTreeViewContext } from \"../../TreeViewProvider/index.js\";\nimport { TreeViewChildrenItemContext, TreeViewChildrenItemProvider } from \"../../TreeViewProvider/TreeViewChildrenItemProvider.js\";\nimport { buildSiblingIndexes, TREE_VIEW_ROOT_PARENT_ID } from \"../useTreeViewItems/useTreeViewItems.utils.js\";\nimport { TreeViewItemDepthContext } from \"../../TreeViewItemDepthContext/index.js\";\nimport { generateTreeItemIdAttribute } from \"../../corePlugins/useTreeViewId/useTreeViewId.utils.js\";\nimport { itemHasChildren } from \"../../../hooks/useTreeItemUtils/useTreeItemUtils.js\";\nimport { useSelector } from \"../../hooks/useSelector.js\";\nimport { selectorTreeViewId } from \"../../corePlugins/useTreeViewId/useTreeViewId.selectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const useTreeViewJSXItems = ({\n  instance,\n  store\n}) => {\n  instance.preventItemUpdates();\n  const insertJSXItem = useEventCallback(item => {\n    store.update(prevState => {\n      if (prevState.items.itemMetaLookup[item.id] != null) {\n        throw new Error(['MUI X: The Tree View component requires all items to have a unique `id` property.', 'Alternatively, you can use the `getItemId` prop to specify a custom id for each item.', `Two items were provided with the same id in the \\`items\\` prop: \"${item.id}\"`].join('\\n'));\n      }\n      return _extends({}, prevState, {\n        items: _extends({}, prevState.items, {\n          itemMetaLookup: _extends({}, prevState.items.itemMetaLookup, {\n            [item.id]: item\n          }),\n          // For Simple Tree View, we don't have a proper `item` object, so we create a very basic one.\n          itemModelLookup: _extends({}, prevState.items.itemModelLookup, {\n            [item.id]: {\n              id: item.id,\n              label: item.label ?? ''\n            }\n          })\n        })\n      });\n    });\n    return () => {\n      store.update(prevState => {\n        const newItemMetaLookup = _extends({}, prevState.items.itemMetaLookup);\n        const newItemModelLookup = _extends({}, prevState.items.itemModelLookup);\n        delete newItemMetaLookup[item.id];\n        delete newItemModelLookup[item.id];\n        return _extends({}, prevState, {\n          items: _extends({}, prevState.items, {\n            itemMetaLookup: newItemMetaLookup,\n            itemModelLookup: newItemModelLookup\n          })\n        });\n      });\n      publishTreeViewEvent(instance, 'removeItem', {\n        id: item.id\n      });\n    };\n  });\n  const setJSXItemsOrderedChildrenIds = (parentId, orderedChildrenIds) => {\n    const parentIdWithDefault = parentId ?? TREE_VIEW_ROOT_PARENT_ID;\n    store.update(prevState => _extends({}, prevState, {\n      items: _extends({}, prevState.items, {\n        itemOrderedChildrenIdsLookup: _extends({}, prevState.items.itemOrderedChildrenIdsLookup, {\n          [parentIdWithDefault]: orderedChildrenIds\n        }),\n        itemChildrenIndexesLookup: _extends({}, prevState.items.itemChildrenIndexesLookup, {\n          [parentIdWithDefault]: buildSiblingIndexes(orderedChildrenIds)\n        })\n      })\n    }));\n  };\n  const mapFirstCharFromJSX = useEventCallback((itemId, firstChar) => {\n    instance.updateFirstCharMap(firstCharMap => {\n      firstCharMap[itemId] = firstChar;\n      return firstCharMap;\n    });\n    return () => {\n      instance.updateFirstCharMap(firstCharMap => {\n        const newMap = _extends({}, firstCharMap);\n        delete newMap[itemId];\n        return newMap;\n      });\n    };\n  });\n  return {\n    instance: {\n      insertJSXItem,\n      setJSXItemsOrderedChildrenIds,\n      mapFirstCharFromJSX\n    }\n  };\n};\nconst useTreeViewJSXItemsItemPlugin = ({\n  props,\n  rootRef,\n  contentRef\n}) => {\n  const {\n    instance,\n    store\n  } = useTreeViewContext();\n  const {\n    children,\n    disabled = false,\n    label,\n    itemId,\n    id\n  } = props;\n  const parentContext = React.useContext(TreeViewChildrenItemContext);\n  if (parentContext == null) {\n    throw new Error(['MUI X: Could not find the Tree View Children Item context.', 'It looks like you rendered your component outside of a SimpleTreeView parent component.', 'This can also happen if you are bundling multiple versions of the Tree View.'].join('\\n'));\n  }\n  const {\n    registerChild,\n    unregisterChild,\n    parentId\n  } = parentContext;\n  const expandable = itemHasChildren(children);\n  const pluginContentRef = React.useRef(null);\n  const handleContentRef = useForkRef(pluginContentRef, contentRef);\n  const treeId = useSelector(store, selectorTreeViewId);\n\n  // Prevent any flashing\n  useEnhancedEffect(() => {\n    const idAttribute = generateTreeItemIdAttribute({\n      itemId,\n      treeId,\n      id\n    });\n    registerChild(idAttribute, itemId);\n    return () => {\n      unregisterChild(idAttribute);\n      unregisterChild(idAttribute);\n    };\n  }, [store, instance, registerChild, unregisterChild, itemId, id, treeId]);\n  useEnhancedEffect(() => {\n    return instance.insertJSXItem({\n      id: itemId,\n      idAttribute: id,\n      parentId,\n      expandable,\n      disabled\n    });\n  }, [instance, parentId, itemId, expandable, disabled, id]);\n  React.useEffect(() => {\n    if (label) {\n      return instance.mapFirstCharFromJSX(itemId, (pluginContentRef.current?.textContent ?? '').substring(0, 1).toLowerCase());\n    }\n    return undefined;\n  }, [instance, itemId, label]);\n  return {\n    contentRef: handleContentRef,\n    rootRef\n  };\n};\nuseTreeViewJSXItems.itemPlugin = useTreeViewJSXItemsItemPlugin;\nuseTreeViewJSXItems.wrapItem = ({\n  children,\n  itemId,\n  idAttribute\n}) => {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const depthContext = React.useContext(TreeViewItemDepthContext);\n  return /*#__PURE__*/_jsx(TreeViewChildrenItemProvider, {\n    itemId: itemId,\n    idAttribute: idAttribute,\n    children: /*#__PURE__*/_jsx(TreeViewItemDepthContext.Provider, {\n      value: depthContext + 1,\n      children: children\n    })\n  });\n};\nuseTreeViewJSXItems.wrapRoot = ({\n  children\n}) => /*#__PURE__*/_jsx(TreeViewChildrenItemProvider, {\n  itemId: null,\n  idAttribute: null,\n  children: /*#__PURE__*/_jsx(TreeViewItemDepthContext.Provider, {\n    value: 0,\n    children: children\n  })\n});\nuseTreeViewJSXItems.params = {};", "import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTreeViewContext } from \"./TreeViewContext.js\";\nimport { escapeOperandAttributeSelector } from \"../utils/utils.js\";\nimport { selectorItemOrderedChildrenIds } from \"../plugins/useTreeViewItems/useTreeViewItems.selectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const TreeViewChildrenItemContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  TreeViewChildrenItemContext.displayName = 'TreeViewChildrenItemContext';\n}\nexport function TreeViewChildrenItemProvider(props) {\n  const {\n    children,\n    itemId = null,\n    idAttribute\n  } = props;\n  const {\n    instance,\n    store,\n    rootRef\n  } = useTreeViewContext();\n  const childrenIdAttrToIdRef = React.useRef(new Map());\n  React.useEffect(() => {\n    if (!rootRef.current) {\n      return;\n    }\n    const previousChildrenIds = selectorItemOrderedChildrenIds(store.value, itemId ?? null) ?? [];\n    const escapedIdAttr = escapeOperandAttributeSelector(idAttribute ?? rootRef.current.id);\n    const childrenElements = rootRef.current.querySelectorAll(`${itemId == null ? '' : `*[id=\"${escapedIdAttr}\"] `}[role=\"treeitem\"]:not(*[id=\"${escapedIdAttr}\"] [role=\"treeitem\"] [role=\"treeitem\"])`);\n    const childrenIds = Array.from(childrenElements).map(child => childrenIdAttrToIdRef.current.get(child.id));\n    const hasChanged = childrenIds.length !== previousChildrenIds.length || childrenIds.some((childId, index) => childId !== previousChildrenIds[index]);\n    if (hasChanged) {\n      instance.setJSXItemsOrderedChildrenIds(itemId ?? null, childrenIds);\n    }\n  });\n  const value = React.useMemo(() => ({\n    registerChild: (childIdAttribute, childItemId) => childrenIdAttrToIdRef.current.set(childIdAttribute, childItemId),\n    unregisterChild: childIdAttribute => childrenIdAttrToIdRef.current.delete(childIdAttribute),\n    parentId: itemId\n  }), [itemId]);\n  return /*#__PURE__*/_jsx(TreeViewChildrenItemContext.Provider, {\n    value: value,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? TreeViewChildrenItemProvider.propTypes = {\n  children: PropTypes.node,\n  id: PropTypes.string\n} : void 0;", "// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\n\n// TODO, eventually replaces this function with CSS.escape, once available in jsdom, either added manually or built in\n// https://github.com/jsdom/jsdom/issues/1550#issuecomment-236734471\nexport function escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}", "import { useTreeViewItems } from \"../internals/plugins/useTreeViewItems/index.js\";\nimport { useTreeViewExpansion } from \"../internals/plugins/useTreeViewExpansion/index.js\";\nimport { useTreeViewSelection } from \"../internals/plugins/useTreeViewSelection/index.js\";\nimport { useTreeViewFocus } from \"../internals/plugins/useTreeViewFocus/index.js\";\nimport { useTreeViewKeyboardNavigation } from \"../internals/plugins/useTreeViewKeyboardNavigation/index.js\";\nimport { useTreeViewJSXItems } from \"../internals/plugins/useTreeViewJSXItems/index.js\";\nexport const SIMPLE_TREE_VIEW_PLUGINS = [useTreeViewItems, useTreeViewExpansion, useTreeViewSelection, useTreeViewFocus, useTreeViewKeyboardNavigation, useTreeViewJSXItems];\n\n// We can't infer this type from the plugin, otherwise we would lose the generics."],
  "mappings": "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",
  "names": ["React", "import_prop_types", "React", "React", "React", "React", "React", "_jsx", "React", "React", "React", "registryContainer", "useInstanceEventHandler", "React", "React", "React", "import_jsx_runtime", "_jsx", "PropTypes", "import_jsx_runtime", "_jsx", "import_jsx_runtime", "_excluded", "SimpleTreeView", "_jsx", "PropTypes"]
}
